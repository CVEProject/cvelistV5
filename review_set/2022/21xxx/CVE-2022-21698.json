{
    "containers": {
        "cna": {
            "affected": [
                {
                    "product": "client_golang",
                    "vendor": "prometheus",
                    "versions": [
                        {
                            "status": "affected",
                            "version": "< 1.11.1"
                        }
                    ]
                }
            ],
            "descriptions": [
                {
                    "lang": "en",
                    "value": "client_golang is the instrumentation library for Go applications in Prometheus, and the promhttp package in client_golang provides tooling around HTTP servers and clients. In client_golang prior to version 1.11.1, HTTP server is susceptible to a Denial of Service through unbounded cardinality, and potential memory exhaustion, when handling requests with non-standard HTTP methods. In order to be affected, an instrumented software must use any of `promhttp.InstrumentHandler*` middleware except `RequestsInFlight`; not filter any specific methods (e.g GET) before middleware; pass metric with `method` label name to our middleware; and not have any firewall/LB/proxy that filters away requests with unknown `method`. client_golang version 1.11.1 contains a patch for this issue. Several workarounds are available, including removing the `method` label name from counter/gauge used in the InstrumentHandler; turning off affected promhttp handlers; adding custom middleware before promhttp handler that will sanitize the request method given by Go http.Request; and using a reverse proxy or web application firewall, configured to only allow a limited set of methods."
                }
            ],
            "metrics": [
                {
                    "cvssV3_1": {
                        "attackComplexity": "LOW",
                        "attackVector": "NETWORK",
                        "availabilityImpact": "HIGH",
                        "baseScore": 7.5,
                        "baseSeverity": "HIGH",
                        "confidentialityImpact": "NONE",
                        "integrityImpact": "NONE",
                        "privilegesRequired": "NONE",
                        "scope": "UNCHANGED",
                        "userInteraction": "NONE",
                        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                        "version": "3.1"
                    }
                }
            ],
            "problemTypes": [
                {
                    "descriptions": [
                        {
                            "cweId": "CWE-400",
                            "description": "CWE-400: Uncontrolled Resource Consumption",
                            "lang": "en",
                            "type": "CWE"
                        }
                    ]
                }
            ],
            "providerMetadata": {
                "dateUpdated": "2022-03-21T00:00:00",
                "orgId": "a0819718-46f1-4df5-94e2-005712e83aaa",
                "shortName": "GitHub_M"
            },
            "references": [
                {
                    "tags": [
                        "x_refsource_CONFIRM"
                    ],
                    "url": "https://github.com/prometheus/client_golang/security/advisories/GHSA-cg3q-j54f-5p7p"
                },
                {
                    "tags": [
                        "x_refsource_MISC"
                    ],
                    "url": "https://github.com/prometheus/client_golang/pull/962"
                },
                {
                    "tags": [
                        "x_refsource_MISC"
                    ],
                    "url": "https://github.com/prometheus/client_golang/pull/987"
                },
                {
                    "tags": [
                        "x_refsource_MISC"
                    ],
                    "url": "https://github.com/prometheus/client_golang/releases/tag/v1.11.1"
                }
            ],
            "source": {
                "advisory": "GHSA-cg3q-j54f-5p7p",
                "discovery": "UNKNOWN"
            },
            "title": "Uncontrolled Resource Consumption in promhttp",
            "x_legacyV4Record": {
                "CVE_data_meta": {
                    "ASSIGNER": "security-advisories@github.com",
                    "ID": "CVE-2022-21698",
                    "STATE": "PUBLIC",
                    "TITLE": "Uncontrolled Resource Consumption in promhttp"
                },
                "affects": {
                    "vendor": {
                        "vendor_data": [
                            {
                                "product": {
                                    "product_data": [
                                        {
                                            "product_name": "client_golang",
                                            "version": {
                                                "version_data": [
                                                    {
                                                        "version_value": "< 1.11.1"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "vendor_name": "prometheus"
                            }
                        ]
                    }
                },
                "data_format": "MITRE",
                "data_type": "CVE",
                "data_version": "4.0",
                "description": {
                    "description_data": [
                        {
                            "lang": "eng",
                            "value": "client_golang is the instrumentation library for Go applications in Prometheus, and the promhttp package in client_golang provides tooling around HTTP servers and clients. In client_golang prior to version 1.11.1, HTTP server is susceptible to a Denial of Service through unbounded cardinality, and potential memory exhaustion, when handling requests with non-standard HTTP methods. In order to be affected, an instrumented software must use any of `promhttp.InstrumentHandler*` middleware except `RequestsInFlight`; not filter any specific methods (e.g GET) before middleware; pass metric with `method` label name to our middleware; and not have any firewall/LB/proxy that filters away requests with unknown `method`. client_golang version 1.11.1 contains a patch for this issue. Several workarounds are available, including removing the `method` label name from counter/gauge used in the InstrumentHandler; turning off affected promhttp handlers; adding custom middleware before promhttp handler that will sanitize the request method given by Go http.Request; and using a reverse proxy or web application firewall, configured to only allow a limited set of methods."
                        }
                    ]
                },
                "impact": {
                    "cvss": {
                        "attackComplexity": "LOW",
                        "attackVector": "NETWORK",
                        "availabilityImpact": "HIGH",
                        "baseScore": 7.5,
                        "baseSeverity": "HIGH",
                        "confidentialityImpact": "NONE",
                        "integrityImpact": "NONE",
                        "privilegesRequired": "NONE",
                        "scope": "UNCHANGED",
                        "userInteraction": "NONE",
                        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                        "version": "3.1"
                    }
                },
                "problemtype": {
                    "problemtype_data": [
                        {
                            "description": [
                                {
                                    "lang": "eng",
                                    "value": "CWE-400: Uncontrolled Resource Consumption"
                                }
                            ]
                        }
                    ]
                },
                "references": {
                    "reference_data": [
                        {
                            "name": "https://github.com/prometheus/client_golang/security/advisories/GHSA-cg3q-j54f-5p7p",
                            "refsource": "CONFIRM",
                            "url": "https://github.com/prometheus/client_golang/security/advisories/GHSA-cg3q-j54f-5p7p"
                        },
                        {
                            "name": "https://github.com/prometheus/client_golang/pull/962",
                            "refsource": "MISC",
                            "url": "https://github.com/prometheus/client_golang/pull/962"
                        },
                        {
                            "name": "https://github.com/prometheus/client_golang/pull/987",
                            "refsource": "MISC",
                            "url": "https://github.com/prometheus/client_golang/pull/987"
                        },
                        {
                            "name": "https://github.com/prometheus/client_golang/releases/tag/v1.11.1",
                            "refsource": "MISC",
                            "url": "https://github.com/prometheus/client_golang/releases/tag/v1.11.1"
                        }
                    ]
                },
                "source": {
                    "advisory": "GHSA-cg3q-j54f-5p7p",
                    "discovery": "UNKNOWN"
                }
            }
        }
    },
    "cveMetadata": {
        "assignerOrgId": "a0819718-46f1-4df5-94e2-005712e83aaa",
        "assignerShortName": "GitHub_M",
        "cveId": "CVE-2022-21698",
        "dateUpdated": "2022-03-21T00:00:00",
        "state": "PUBLISHED"
    },
    "dataType": "CVE_RECORD",
    "dataVersion": "5.0"
}