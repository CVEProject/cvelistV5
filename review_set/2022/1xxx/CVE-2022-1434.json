{
    "containers": {
        "cna": {
            "affected": [
                {
                    "product": "OpenSSL",
                    "vendor": "OpenSSL",
                    "versions": [
                        {
                            "status": "affected",
                            "version": "Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2)"
                        }
                    ]
                }
            ],
            "credits": [
                {
                    "lang": "en",
                    "value": "Tom Colley (Broadcom)"
                }
            ],
            "datePublic": "2022-05-03T00:00:00",
            "descriptions": [
                {
                    "lang": "en",
                    "value": "The OpenSSL 3.0 implementation of the RC4-MD5 ciphersuite incorrectly uses the AAD data as the MAC key. This makes the MAC key trivially predictable. An attacker could exploit this issue by performing a man-in-the-middle attack to modify data being sent from one endpoint to an OpenSSL 3.0 recipient such that the modified data would still pass the MAC integrity check. Note that data sent from an OpenSSL 3.0 endpoint to a non-OpenSSL 3.0 endpoint will always be rejected by the recipient and the connection will fail at that point. Many application protocols require data to be sent from the client to the server first. Therefore, in such a case, only an OpenSSL 3.0 server would be impacted when talking to a non-OpenSSL 3.0 client. If both endpoints are OpenSSL 3.0 then the attacker could modify data being sent in both directions. In this case both clients and servers could be affected, regardless of the application protocol. Note that in the absence of an attacker this bug means that an OpenSSL 3.0 endpoint communicating with a non-OpenSSL 3.0 endpoint will fail to complete the handshake when using this ciphersuite. The confidentiality of data is not impacted by this issue, i.e. an attacker cannot decrypt data that has been encrypted using this ciphersuite - they can only modify it. In order for this attack to work both endpoints must legitimately negotiate the RC4-MD5 ciphersuite. This ciphersuite is not compiled by default in OpenSSL 3.0, and is not available within the default provider or the default ciphersuite list. This ciphersuite will never be used if TLSv1.3 has been negotiated. In order for an OpenSSL 3.0 endpoint to use this ciphersuite the following must have occurred: 1) OpenSSL must have been compiled with the (non-default) compile time option enable-weak-ssl-ciphers 2) OpenSSL must have had the legacy provider explicitly loaded (either through application code or via configuration) 3) The ciphersuite must have been explicitly added to the ciphersuite list 4) The libssl security level must have been set to 0 (default is 1) 5) A version of SSL/TLS below TLSv1.3 must have been negotiated 6) Both endpoints must negotiate the RC4-MD5 ciphersuite in preference to any others that both endpoints have in common Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2)."
                }
            ],
            "metrics": [
                {
                    "other": {
                        "content": {
                            "lang": "eng",
                            "url": "https://www.openssl.org/policies/secpolicy.html#Low",
                            "value": "Low"
                        },
                        "type": "unknown"
                    }
                }
            ],
            "problemTypes": [
                {
                    "descriptions": [
                        {
                            "description": "Incorrect MAC key",
                            "lang": "en",
                            "type": "text"
                        }
                    ]
                }
            ],
            "providerMetadata": {
                "dateUpdated": "2022-06-02T19:06:10",
                "orgId": "3a12439a-ef3a-4c79-92e6-6081a721f1e5",
                "shortName": "openssl"
            },
            "references": [
                {
                    "tags": [
                        "x_refsource_CONFIRM"
                    ],
                    "url": "https://www.openssl.org/news/secadv/20220503.txt"
                },
                {
                    "tags": [
                        "x_refsource_CONFIRM"
                    ],
                    "url": "https://git.openssl.org/gitweb/?p=openssl.git%3Ba=commitdiff%3Bh=7d56a74a96828985db7354a55227a511615f732b"
                },
                {
                    "tags": [
                        "x_refsource_CONFIRM"
                    ],
                    "url": "https://security.netapp.com/advisory/ntap-20220602-0009/"
                }
            ],
            "title": "Incorrect MAC key used in the RC4-MD5 ciphersuite",
            "x_legacyV4Record": {
                "CVE_data_meta": {
                    "ASSIGNER": "openssl-security@openssl.org",
                    "DATE_PUBLIC": "2022-05-03",
                    "ID": "CVE-2022-1434",
                    "STATE": "PUBLIC",
                    "TITLE": "Incorrect MAC key used in the RC4-MD5 ciphersuite"
                },
                "affects": {
                    "vendor": {
                        "vendor_data": [
                            {
                                "product": {
                                    "product_data": [
                                        {
                                            "product_name": "OpenSSL",
                                            "version": {
                                                "version_data": [
                                                    {
                                                        "version_value": "Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2)"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "vendor_name": "OpenSSL"
                            }
                        ]
                    }
                },
                "credit": [
                    {
                        "lang": "eng",
                        "value": "Tom Colley (Broadcom)"
                    }
                ],
                "data_format": "MITRE",
                "data_type": "CVE",
                "data_version": "4.0",
                "description": {
                    "description_data": [
                        {
                            "lang": "eng",
                            "value": "The OpenSSL 3.0 implementation of the RC4-MD5 ciphersuite incorrectly uses the AAD data as the MAC key. This makes the MAC key trivially predictable. An attacker could exploit this issue by performing a man-in-the-middle attack to modify data being sent from one endpoint to an OpenSSL 3.0 recipient such that the modified data would still pass the MAC integrity check. Note that data sent from an OpenSSL 3.0 endpoint to a non-OpenSSL 3.0 endpoint will always be rejected by the recipient and the connection will fail at that point. Many application protocols require data to be sent from the client to the server first. Therefore, in such a case, only an OpenSSL 3.0 server would be impacted when talking to a non-OpenSSL 3.0 client. If both endpoints are OpenSSL 3.0 then the attacker could modify data being sent in both directions. In this case both clients and servers could be affected, regardless of the application protocol. Note that in the absence of an attacker this bug means that an OpenSSL 3.0 endpoint communicating with a non-OpenSSL 3.0 endpoint will fail to complete the handshake when using this ciphersuite. The confidentiality of data is not impacted by this issue, i.e. an attacker cannot decrypt data that has been encrypted using this ciphersuite - they can only modify it. In order for this attack to work both endpoints must legitimately negotiate the RC4-MD5 ciphersuite. This ciphersuite is not compiled by default in OpenSSL 3.0, and is not available within the default provider or the default ciphersuite list. This ciphersuite will never be used if TLSv1.3 has been negotiated. In order for an OpenSSL 3.0 endpoint to use this ciphersuite the following must have occurred: 1) OpenSSL must have been compiled with the (non-default) compile time option enable-weak-ssl-ciphers 2) OpenSSL must have had the legacy provider explicitly loaded (either through application code or via configuration) 3) The ciphersuite must have been explicitly added to the ciphersuite list 4) The libssl security level must have been set to 0 (default is 1) 5) A version of SSL/TLS below TLSv1.3 must have been negotiated 6) Both endpoints must negotiate the RC4-MD5 ciphersuite in preference to any others that both endpoints have in common Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2)."
                        }
                    ]
                },
                "impact": [
                    {
                        "lang": "eng",
                        "url": "https://www.openssl.org/policies/secpolicy.html#Low",
                        "value": "Low"
                    }
                ],
                "problemtype": {
                    "problemtype_data": [
                        {
                            "description": [
                                {
                                    "lang": "eng",
                                    "value": "Incorrect MAC key"
                                }
                            ]
                        }
                    ]
                },
                "references": {
                    "reference_data": [
                        {
                            "name": "https://www.openssl.org/news/secadv/20220503.txt",
                            "refsource": "CONFIRM",
                            "url": "https://www.openssl.org/news/secadv/20220503.txt"
                        },
                        {
                            "name": "https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=7d56a74a96828985db7354a55227a511615f732b",
                            "refsource": "CONFIRM",
                            "url": "https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=7d56a74a96828985db7354a55227a511615f732b"
                        },
                        {
                            "name": "https://security.netapp.com/advisory/ntap-20220602-0009/",
                            "refsource": "CONFIRM",
                            "url": "https://security.netapp.com/advisory/ntap-20220602-0009/"
                        }
                    ]
                }
            }
        }
    },
    "cveMetadata": {
        "assignerOrgId": "3a12439a-ef3a-4c79-92e6-6081a721f1e5",
        "assignerShortName": "openssl",
        "cveId": "CVE-2022-1434",
        "datePublished": "2022-05-03T00:00:00",
        "dateReserved": "2022-04-22T00:00:00",
        "dateUpdated": "2022-06-02T19:06:10",
        "state": "PUBLISHED"
    },
    "dataType": "CVE_RECORD",
    "dataVersion": "5.0"
}