{
    "containers": {
        "cna": {
            "affected": [
                {
                    "product": "nanopb",
                    "vendor": "nanopb",
                    "versions": [
                        {
                            "status": "affected",
                            "version": ">= 0.3.2, <= 0.3.9.7"
                        },
                        {
                            "status": "affected",
                            "version": ">= 0.4.0, <= 0.4.4"
                        }
                    ]
                }
            ],
            "descriptions": [
                {
                    "lang": "en",
                    "value": "Nanopb is a small code-size Protocol Buffers implementation in ansi C. In Nanopb before versions 0.3.9.8 and 0.4.5, decoding a specifically formed message can cause invalid `free()` or `realloc()` calls if the message type contains an `oneof` field, and the `oneof` directly contains both a pointer field and a non-pointer field. If the message data first contains the non-pointer field and then the pointer field, the data of the non-pointer field is incorrectly treated as if it was a pointer value. Such message data rarely occurs in normal messages, but it is a concern when untrusted data is parsed. This has been fixed in versions 0.3.9.8 and 0.4.5. See referenced GitHub Security Advisory for more information including workarounds."
                }
            ],
            "metrics": [
                {
                    "cvssV3_1": {
                        "attackComplexity": "LOW",
                        "attackVector": "NETWORK",
                        "availabilityImpact": "LOW",
                        "baseScore": 7.1,
                        "baseSeverity": "HIGH",
                        "confidentialityImpact": "NONE",
                        "integrityImpact": "HIGH",
                        "privilegesRequired": "LOW",
                        "scope": "UNCHANGED",
                        "userInteraction": "NONE",
                        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:L",
                        "version": "3.1"
                    }
                }
            ],
            "problemTypes": [
                {
                    "descriptions": [
                        {
                            "cweId": "CWE-763",
                            "description": "CWE-763: Release of Invalid Pointer or Reference",
                            "lang": "en",
                            "type": "CWE"
                        }
                    ]
                }
            ],
            "providerMetadata": {
                "dateUpdated": "2021-03-23T17:45:19",
                "orgId": "a0819718-46f1-4df5-94e2-005712e83aaa",
                "shortName": "GitHub_M"
            },
            "references": [
                {
                    "tags": [
                        "x_refsource_CONFIRM"
                    ],
                    "url": "https://github.com/nanopb/nanopb/security/advisories/GHSA-7mv5-5mxh-qg88"
                },
                {
                    "tags": [
                        "x_refsource_MISC"
                    ],
                    "url": "https://github.com/nanopb/nanopb/issues/647"
                },
                {
                    "tags": [
                        "x_refsource_MISC"
                    ],
                    "url": "https://github.com/nanopb/nanopb/commit/e2f0ccf939d9f82931d085acb6df8e9a182a4261"
                },
                {
                    "tags": [
                        "x_refsource_MISC"
                    ],
                    "url": "https://github.com/nanopb/nanopb/blob/c9124132a604047d0ef97a09c0e99cd9bed2c818/CHANGELOG.txt#L1"
                }
            ],
            "source": {
                "advisory": "GHSA-7mv5-5mxh-qg88",
                "discovery": "UNKNOWN"
            },
            "title": "Invalid free() call in Nanopb",
            "x_legacyV4Record": {
                "CVE_data_meta": {
                    "ASSIGNER": "security-advisories@github.com",
                    "ID": "CVE-2021-21401",
                    "STATE": "PUBLIC",
                    "TITLE": "Invalid free() call in Nanopb"
                },
                "affects": {
                    "vendor": {
                        "vendor_data": [
                            {
                                "product": {
                                    "product_data": [
                                        {
                                            "product_name": "nanopb",
                                            "version": {
                                                "version_data": [
                                                    {
                                                        "version_value": ">= 0.3.2, <= 0.3.9.7"
                                                    },
                                                    {
                                                        "version_value": ">= 0.4.0, <= 0.4.4"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "vendor_name": "nanopb"
                            }
                        ]
                    }
                },
                "data_format": "MITRE",
                "data_type": "CVE",
                "data_version": "4.0",
                "description": {
                    "description_data": [
                        {
                            "lang": "eng",
                            "value": "Nanopb is a small code-size Protocol Buffers implementation in ansi C. In Nanopb before versions 0.3.9.8 and 0.4.5, decoding a specifically formed message can cause invalid `free()` or `realloc()` calls if the message type contains an `oneof` field, and the `oneof` directly contains both a pointer field and a non-pointer field. If the message data first contains the non-pointer field and then the pointer field, the data of the non-pointer field is incorrectly treated as if it was a pointer value. Such message data rarely occurs in normal messages, but it is a concern when untrusted data is parsed. This has been fixed in versions 0.3.9.8 and 0.4.5. See referenced GitHub Security Advisory for more information including workarounds."
                        }
                    ]
                },
                "impact": {
                    "cvss": {
                        "attackComplexity": "LOW",
                        "attackVector": "NETWORK",
                        "availabilityImpact": "LOW",
                        "baseScore": 7.1,
                        "baseSeverity": "HIGH",
                        "confidentialityImpact": "NONE",
                        "integrityImpact": "HIGH",
                        "privilegesRequired": "LOW",
                        "scope": "UNCHANGED",
                        "userInteraction": "NONE",
                        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:L",
                        "version": "3.1"
                    }
                },
                "problemtype": {
                    "problemtype_data": [
                        {
                            "description": [
                                {
                                    "lang": "eng",
                                    "value": "CWE-763: Release of Invalid Pointer or Reference"
                                }
                            ]
                        }
                    ]
                },
                "references": {
                    "reference_data": [
                        {
                            "name": "https://github.com/nanopb/nanopb/security/advisories/GHSA-7mv5-5mxh-qg88",
                            "refsource": "CONFIRM",
                            "url": "https://github.com/nanopb/nanopb/security/advisories/GHSA-7mv5-5mxh-qg88"
                        },
                        {
                            "name": "https://github.com/nanopb/nanopb/issues/647",
                            "refsource": "MISC",
                            "url": "https://github.com/nanopb/nanopb/issues/647"
                        },
                        {
                            "name": "https://github.com/nanopb/nanopb/commit/e2f0ccf939d9f82931d085acb6df8e9a182a4261",
                            "refsource": "MISC",
                            "url": "https://github.com/nanopb/nanopb/commit/e2f0ccf939d9f82931d085acb6df8e9a182a4261"
                        },
                        {
                            "name": "https://github.com/nanopb/nanopb/blob/c9124132a604047d0ef97a09c0e99cd9bed2c818/CHANGELOG.txt#L1",
                            "refsource": "MISC",
                            "url": "https://github.com/nanopb/nanopb/blob/c9124132a604047d0ef97a09c0e99cd9bed2c818/CHANGELOG.txt#L1"
                        }
                    ]
                },
                "source": {
                    "advisory": "GHSA-7mv5-5mxh-qg88",
                    "discovery": "UNKNOWN"
                }
            }
        }
    },
    "cveMetadata": {
        "assignerOrgId": "a0819718-46f1-4df5-94e2-005712e83aaa",
        "assignerShortName": "GitHub_M",
        "cveId": "CVE-2021-21401",
        "datePublished": "2021-03-23T17:45:19",
        "dateReserved": "2020-12-22T00:00:00",
        "dateUpdated": "2021-03-23T17:45:19",
        "state": "PUBLISHED"
    },
    "dataType": "CVE_RECORD",
    "dataVersion": "5.0"
}